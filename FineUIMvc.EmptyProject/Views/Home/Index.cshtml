@{
    ViewBag.Title = "首页";
    var F = @Html.F();
}

@section head {

    <link type="text/css" rel="stylesheet" href="~/res/css/index.css" />

}

@section body {
    <!-- fineui的模板界面，完全基于.net的前端模板框架 -->
    <div id="header" class="f-widget-header f-mainheader">
        <table>
            <tr>
                <td>
                    @(F.Button().OnClientClick("window.open('http://fineui.com/mvc/','_blank');").EnableDefaultCorner(false).EnableDefaultState(false).IconFont(IconFont._Home).IconAlign(IconAlign.Top).ToolTip("官网首页").ID("btnHomePage").CssClass("icononlyaction"))
                    <a class="logo" href="@Url.Content("~/")" title="FineUIMvc 空项目">
                        FineUIMvc 空项目
                    </a>
                </td>
                <td style="text-align: right;">

                    @(F.Button().EnableDefaultCorner(false).EnableDefaultState(false).IconFont(IconFont._Skin).IconAlign(IconAlign.Top).Text("主题仓库").ID("btnThemeSelect").CssClass("icontopaction themes").Listener("click", "onThemeSelectClick"))

                    @(F.Button().EnableDefaultCorner(false).EnableDefaultState(false).IconAlign(IconAlign.Left).IconUrl(Url.Content("~/res/images/my_face_80.jpg")).Text("三生石上").CssClass("userpicaction")
                        .Menu(F.Menu()
                            .Items(
                                F.MenuButton().IconFont(IconFont._User).Text("个人信息").Listener("click", "F.alert('尚未实现');"),
                                F.MenuSeparator(),
                                F.MenuButton().IconFont(IconFont._SignOut).Text("安全退出").Listener("click", "F.alert('尚未实现');")
                            )
                        )
                    )
                </td>
            </tr>
        </table>
    </div>

    <div id="maincontent">
        <h2>FineUIMvc</h2>
        基于 jQuery 的专业 ASP.NET MVC 控件库

        <br />
        <h2>支持的浏览器</h2>
        Chrome、Firefox、Safari、Edge、IE8.0+

        <br />
        <h2>授权协议</h2>
        商业授权

        <br />
        <h2>相关链接</h2>
        <ul class="list">
            <li>
                首页：<a target="_blank" href="http://fineui.com/mvc/">http://fineui.com/mvc/</a>
            </li>
            <li>
                示例：<a target="_blank" href="http://fineui.com/demo_mvc/">http://fineui.com/demo_mvc/</a>
            </li>
            <li>
                更新：<a target="_blank" href="http://fineui.com/version_mvc/">http://fineui.com/version_mvc/</a>
            </li>
            <li>
                论坛：<a target="_blank" href="http://fineui.com/bbs/">http://fineui.com/bbs/</a>
            </li>
        </ul>

    </div>

    <!-- 9.7 现在弄明白了，为什么login以及hello页面不需要添加模板了，本fineui模板会将其他cshtml文件中单纯的section body中 
         的元素自动新建选项卡显示在页面中，避免重复代码
        -->
    @(F.RegionPanel().ID("RegionPanel1").ShowBorder(false).IsViewPort(true).CssClass("mainpanel")
        .Regions(
            F.Region().ID("Region1").ShowBorder(false).ShowHeader(false).RegionPosition(Position.Top).CssClass("topregion bgpanel").Layout(LayoutType.Fit).ContentEl("#header"),
            F.Region().ID("Region2").RegionSplit(true).RegionSplitWidth(2).RegionSplitIcon(false).Width(200).ShowHeader(false).Title("菜单").EnableCollapse(true).Layout(LayoutType.Fit).RegionPosition(Position.Left).CssClass("leftregion bgpanel")
                .Items(
                    F.Tree().ShowBorder(false).ShowHeader(false).ID("treeMenu")
                        .Nodes(
                            F.TreeNode().Text("默认分类").Expanded(true)
                                .Nodes(
                                    F.TreeNode().Text("开始页面").NavigateUrl("~/Home/Hello"),
                                    F.TreeNode().Text("登录页面").NavigateUrl("~/Home/Login"),
                                    /* 添加个人测试页面到原有空项目模板当中 */
                                    F.TreeNode().Text("个人测试页面").NavigateUrl("~/Test/MyTest"),
                                    /* 尝试添加没有使用模板的anotherTest也加入到空的实例中 */
                                    F.TreeNode().Text("另一个测试页面").NavigateUrl("~/Test/AnotherTest")
                                ),
                            /* 目录树新添加项目后的影响 */
                            F.TreeNode().Text("个人特殊分类").Expanded(true)
                            .Nodes(
                                F.TreeNode().Text("Yeah").NavigateUrl(""),
                                F.TreeNode().Text("Oh Yeah!").NavigateUrl(""),
                                F.TreeNode().Text("Oh Yeah Yeah!").NavigateUrl("")
                            )
                        )
                ),
            F.Region().ID("mainRegion").ShowHeader(false).Layout(LayoutType.Fit).RegionPosition(Position.Center).CssClass("centerregion")
                .Items(
                    F.TabStrip().ID("mainTabStrip").EnableTabCloseMenu(true).ShowBorder(false).ShowInkBar(true)
                        .Tabs(
                            F.Tab().ID("Tab1").Title("首页").BodyPadding(10).Layout(LayoutType.Fit).Icon(Icon.House).ContentEl("#maincontent")
                        )
                )
        )
    )


    @(F.Window().Hidden(true).EnableResize(true).EnableMaximize(true).EnableClose(true).Height(600).Width(1020).IsModal(true).ClearIFrameAfterClose(false).IFrameUrl(Url.Content("~/Home/Themes")).EnableIFrame(true).Title("主题仓库").ID("windowThemeRoller"))
}

@section script {

    <script>

        // 点击主题仓库
        function onThemeSelectClick(event) {
            F.ui.windowThemeRoller.show();
        }

        // 页面控件初始化完毕后，会调用用户自定义的onReady函数
        F.ready(function () {

            if (!F.ui.treeMenu) return;


            // 初始化主框架中的树和选项卡互动，以及地址栏的更新
            // treeMenu： 主框架中的树控件实例，或者内嵌树控件的手风琴控件实例
            // mainTabStrip： 选项卡实例
            // updateHash: 切换Tab时，是否更新地址栏Hash值（默认值：true）
            // refreshWhenExist： 添加选项卡时，如果选项卡已经存在，是否刷新内部IFrame（默认值：false）
            // refreshWhenTabChange: 切换选项卡时，是否刷新内部IFrame（默认值：false）
            // maxTabCount: 最大允许打开的选项卡数量
            // maxTabMessage: 超过最大允许打开选项卡数量时的提示信息
            F.initTreeTabStrip(F.ui.treeMenu, F.ui.mainTabStrip, {
                maxTabCount: 10,
                maxTabMessage: '请先关闭一些选项卡（最多允许打开 10 个）！'
            });

        });
    </script>
}
